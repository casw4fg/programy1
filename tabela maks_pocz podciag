#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;

const int N = 10;

void losuj(int A[]);
void pokaz(int A[]);
int DNSPNM(int A[]);
int NSPNM(int A[]);

int main()
{
    srand(time(NULL));
    int A[N];

    losuj(A);

    cout << "************************\n" << "Tabela: ";
    pokaz(A);
    cout << "\n************************\n";
    cout << "Poczatek Podciagu: " << NSPNM(A);

    cout << "\n************************\n";
        cout << "podciag: ";

 int i = NSPNM(A);
       do{

        cout << A[i] << " ";
        i++;

       }while(i<N && A[i]>=A[i-1]);

return 0;
}

void losuj(int A[]){
for(int i =0 ; i<N; i++){
    A[i] = rand()%10;
}
}


void pokaz(int A[]){
for(int i = 0; i<N; i++){
    cout << A[i] << " ";
}
}
/*
int DNSPNM(int A[]){
    int maks_dl, akt_dl;
    for(int i =1; i<N;i++){
        if(A[i]> A[i-1]){
            akt_dl++;
            if(akt_dl>maks_dl) maks_dl=akt_dl;
        }else{
        akt_dl=1;
        }
        return maks_dl;

    }
}
*/
int NSPNM(int A[]){
int maks_pocz=0, akt_pocz=0, akt_dl=1, maks_dl=1, i;

  for(i =1;i<N;i++){
    if(A[i] > A[i-1]){
        akt_dl++;
        if(akt_dl>maks_dl){
            maks_dl = akt_dl; maks_pocz=akt_pocz;
        }

    }else{
    akt_pocz=i;
    akt_dl=1;
    }

  }
return maks_pocz;
}





